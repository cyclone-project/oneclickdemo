input {
    tcp {
        mode => "server"
        port => 20400
        codec => json_lines
        add_field => { "connectionType" => "tcp" }
    }
    log4j {
        mode => "server"
        port => 20500
        add_field => { "connectionType" => "log4j" }
    }
    tcp {
        mode => "server"
        port => 20600
        codec => json
        add_field => { "connectionType" => "tcp2" }
    }
    syslog {
        port => 20514
        add_field => { "connectionType" => "syslog" }
    }
    gelf {
        port => 20700
        add_field => { "connectionType" => "gelf" }
    }
}

filter {
    # check for error, try to fix it
    if "_jsonparsefailure" in [tags] {
        mutate { gsub => [ "message", "[\n\t]", " "] }
        json { source => "message" }
    }

    if [connectionType] == "tcp" {
        mutate {
            # rename timestamp field for better differentiation
            rename => [ "timestamp", "timestamp-remote" ]
            # undo any possible escaping
            gsub => [
                "message", "\n", " ",
                "message", "&amp;", "&",
                "message", "&lt;", "<",
                "message", "&gt;", ">",
                "message", "&quot;", "\"",
                "message", "&apos;", "'",
                "message", "&#x2F;", "/"
            ]
        }
        # parse remote unix timestamp into human readable format
        date {
            match => [ "timestamp-remote", "UNIX_MS" ]
            target => "timestamp-remote"
        }
    }

    mutate { remove_field => [ "connectionType", "tags" ] }
}

output {
    elasticsearch {
        host => "elasticsearch"
        protocol => "transport"
        index => "%{client-id}-%{+YYYY.MM.dd}"
    }
    stdout { }
}
